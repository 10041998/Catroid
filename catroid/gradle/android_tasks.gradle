/*
 * Catroid: An on-device visual programming system for Android devices
 * Copyright (C) 2010-2018 The Catrobat Team
 * (<http://developer.catrobat.org/credits>)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * An additional term exception under section 7 of the GNU Affero
 * General Public License, version 3, is available at
 * http://developer.catrobat.org/license_additional_term
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

def getAndroidDevices() {
    def deviceIds = []
    [ android.getAdbExecutable().absolutePath, 'devices' ].execute().text.eachLine { line ->
        def matcher = line =~ /^(.*)\tdevice/
        if (matcher) {
            deviceIds << matcher[0][1]
        }
    }
    deviceIds
}

def getAndroidSerial() {
    def availableDevices = getAndroidDevices()
    def androidSerial = System.getenv('ANDROID_SERIAL')

    if (androidSerial?.trim() && !availableDevices.contains(androidSerial)) {
        throw new IllegalStateException("Device ${androidSerial} not found")
    } else if (availableDevices.size() == 0) {
        throw new IllegalStateException("No connected devices!")
    } else {
        androidSerial = availableDevices.first()
    }

    return androidSerial.toString().trim()
}

task adbDisableAnimationsGlobally {
    description 'Disables android animations globally on the connected device'
    group 'android'

    doLast {
        logger.lifecycle(description)

        def androidSerial = getAndroidSerial()
        exec {
            commandLine android.getAdbExecutable().absolutePath, '-s', androidSerial, 'shell', 'settings', 'put', 'global', 'window_animation_scale', '0.0'
        }
        exec {
            commandLine android.getAdbExecutable().absolutePath, '-s', androidSerial, 'shell', 'settings', 'put', 'global', 'transition_animation_scale', '0.0'
        }
        exec {
            commandLine android.getAdbExecutable().absolutePath, '-s', androidSerial, 'shell', 'settings', 'put', 'global', 'animator_duration_scale', '0.0'
        }
    }
}
